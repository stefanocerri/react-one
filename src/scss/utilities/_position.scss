@each $key, $value in $breakpoints {
	@include media('>=#{$key}') {
		$breakpoint: if($key == default, '', \@#{$key});

		.position-absolute#{$breakpoint} {
			position: absolute;
		}

		.position-relative#{$breakpoint} {
			position: relative;
		}

		.position-static#{$breakpoint} {
			position: static;
		}

		.position-fixed#{$breakpoint} {
			position: fixed;
			backface-visibility: hidden;
		}

		// Centered
		.centered#{$breakpoint} {
			@include centered();
		}

		.centered-horizontal#{$breakpoint} {
			display: table;
			margin-left: auto;
			margin-right: auto;
		}

		.centered-vertical#{$breakpoint} {
			@include centered(false, true);
		}

		// Fit an element to the dimensions of its parent
		.fit#{$breakpoint} {
			position: absolute;
			bottom: 0;
			left: 0;
			right: 0;
			top: 0;
			margin: auto;
		}

		// Full width
		.full-width#{$breakpoint} {
			width: 100%;
		}

		// Full viewport width
		.full-viewport-width#{$breakpoint} {
			width: 100vw;
			transform: translateX(-50%);
			margin-left: 50%;
			margin-right: 0;
			max-width: none;
		}

		// Full height
		.full-height#{$breakpoint} {
			height: 100%;
		}

		// Full viewport height
		.full-viewport-height#{$breakpoint} {
			height: 100vh;
		}

		// Fixes an element over the viewport
		.full-screen#{$breakpoint} {
			position: fixed;
			backface-visibility: hidden;
			bottom: 0;
			left: 0;
			right: 0;
			top: 0;
			margin: auto;
		}

		// Evenly distributes child elements within a parent element
		.flex-space-between#{$breakpoint} {
			display: flex;
			justify-content: space-between;
		}

		// Horizontally and vertically centers a child element within a parent element using flexbox
		.flex-centered#{$breakpoint} {
			display: flex;
			justify-content: center;
			align-items: center;
		}

		.cover#{$breakpoint} {
			object-fit: cover;
			object-position: 50% 50%;
			height: 100%;
			width: 100%;
		}

	}
}
